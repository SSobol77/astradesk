# File: services/ticket-adapter-java/src/main/resources/application.yml
# SPDX-License-Identifier: Apache-2.0
# Opis: Konfiguracja aplikacji Ticket Adapter w środowisku deweloperskim
# Project: AstraDesk Framework
# Autor: Siergej Sobolewski
# Data: 2025-10-07

# spring:
#   profiles:
#     active: dev
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           # Adres URL twojego dostawcy tożsamości (IdP), np. Keycloak, Auth0.
#           # Spring automatycznie znajdzie JWKS URI na podstawie tego adresu.
#           issuer-uri: ${OIDC_ISSUER}
#           # Opcjonalnie, jeśli chcesz walidować pole 'audience' w tokenie.
#           # audiences: ${OIDC_AUDIENCE}

#   r2dbc:
#     # Upewnij się, że te zmienne są w pliku .env!
#     url: r2dbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:tickets}
#     username: ${MYSQL_USER:tickets}
#     password: ${MYSQL_PASSWORD:tickets}
#   sql:
#     init:
#       mode: ALWAYS

# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,prometheus

# Konfiguracja DO Testow - prosta
# --- BASE (domyślny profil) ---
server:
  address: 0.0.0.0
  port: 8081

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: WHEN_AUTHORIZED
      probes:
        enabled: true

spring:
  main:
    web-application-type: REACTIVE
  sql:
    init:
      mode: NEVER

# --- PROFIL: no-db (uruchomienie bez bazy i bez OAuth2 Resource Server) ---
---
spring:
  config:
    activate:
      on-profile: no-db
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration
      - org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
      - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
  data:
    r2dbc:
      repositories:
        enabled: false
  main:
    allow-bean-definition-overriding: true
