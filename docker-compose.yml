# SPDX-License-Identifier: Apache-2.0
# File: docker-compose.yml v.1.2.0
# Description:
#     Defines services for AstraDesk local dev environment.
#     Includes API, Prometheus, ticket-adapter (Java), admin-portal (Node.js), auditor,
#     MySQL, Postgres, Redis, NATS, and domain packs (Python, Java, gRPC).
#     Supports polyglot stack (Python 3.14+, Java 25, Node 22+, Postgres 18).
# Author: Siergej Sobolewski
# Since: 2025-10-25

version: "3.9"
services:
  api:
    build: .
    env_file: .env
    environment:
      UV_EXTRA_INDEX_URL: "https://download.pytorch.org/whl/cu121"
      UV_INDEX_STRATEGY: "unsafe-best-match"
    ports:
      - "8080:8080"
    depends_on:
      db:  # Postgres enabled
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      ticket-adapter:
        condition: service_started
      prometheus:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v3.7.1  # Latest stable
    ports:
      - "9090:9090"
    volumes:
      - ./dev/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ticket-adapter:
    build: services/ticket-adapter-java
    env_file: .env
    ports:
      - "8082:8081"
    depends_on:
      mysql:
        condition: service_healthy

  admin:
    build: services/admin-portal
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_started

  auditor:
      build: ./services/auditor
      env_file: .env
      depends_on:
        nats:
          condition: service_healthy
      restart: unless-stopped

  db:
    image: pgvector/pgvector:pg18  # Updated to PostgreSQL 18 with pgvector
    environment:
      POSTGRES_DB: astradesk
      POSTGRES_USER: astradesk
      POSTGRES_PASSWORD: astrapass
    ports: ["5432:5432"]
    volumes: [postgres_data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U astradesk"]
      interval: 5s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8
    environment:
      MYSQL_DATABASE: tickets
      MYSQL_USER: tickets
      MYSQL_PASSWORD: tickets
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "tickets", "-ptickets"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.2.2  # Latest stable
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nats:
    image: nats:2.12.1-alpine  # Latest stable
    command:
      - "--jetstream"
      - "--store_dir=/datastore"
      - "-m"
      - "8222"
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - nats_data:/datastore
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  domain-support:
    build: packages/domain-support
    depends_on:
      - api
      - nats
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

  domain-finance:
      build: packages/domain-finance
      depends_on:
        - api
      environment:
        API_URL: http://api:8000/api/admin/v1
        API_TOKEN: "${API_TOKEN}"

  domain-finance-java:
    build: packages/domain-finance
    command: java -jar build/libs/domain-finance.jar
    depends_on:
      - api
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

  domain-finance-grpc:
    build: packages/domain-finance
    ports:
      - "50051:50051"
    depends_on:
      - api
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

  domain-supply:
    build: packages/domain-supply
    depends_on:
      - api
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

  domain-supply-java:
    build: packages/domain-supply
    command: java -jar build/libs/domain-supply.jar
    depends_on:
      - api
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

  domain-supply-grpc:
    build: packages/domain-supply
    ports:
      - "50052:50051"
    depends_on:
      - api
    environment:
      API_URL: http://api:8000/api/admin/v1
      API_TOKEN: "${API_TOKEN}"

volumes:
  postgres_data:
  mysql_data:
  redis_data:
  nats_data:
