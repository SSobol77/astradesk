name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Sync dependencies
        run: uv sync --frozen
      - name: Lint & Type Check
        run: |
          uv run ruff check src
          uv run ruff format --check src
          uv run mypy src
      - name: Run Python Tests with Coverage
        run: uv run pytest --cov=src --cov-report=xml -q
      - name: Build Docker Image
        run: docker build -t astradesk:ci-python -f Dockerfile .

  build-test-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Build and Test Java Adapter
        working-directory: services/ticket-adapter-java
        run: |
          ./gradlew build
          ./gradlew test jacocoTestReport
      - name: Build Docker Image
        working-directory: services/ticket-adapter-java
        run: docker build -t astradesk:ci-java .

  build-test-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install Dependencies
        working-directory: services/admin-portal
        run: npm ci
      - name: Run Tests with Coverage
        working-directory: services/admin-portal
        run: npm run test -- --coverage
      - name: Build Next.js
        working-directory: services/admin-portal
        run: npm run build
      - name: Build Docker Image
        working-directory: services/admin-portal
        run: docker build -t astradesk:ci-js .

  sonar-scan:
    runs-on: ubuntu-latest
    needs: [build-test-python, build-test-java, build-test-js]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarQube SCM analysis
      - uses: astral-sh/setup-uv@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install Python Dependencies
        run: uv sync --frozen
      - name: Install Node Dependencies
        working-directory: services/admin-portal
        run: npm ci
      - name: Generate Coverage Reports
        run: |
          uv run pytest --cov=src --cov-report=xml -q
          cd services/ticket-adapter-java && ./gradlew test jacocoTestReport
          cd ../admin-portal && npm run test -- --coverage
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run \
            --rm \
            -v $(pwd):/usr/src \
            -e SONAR_HOST_URL=https://sonarcloud.io \
            -e SONAR_TOKEN=$SONAR_TOKEN \
            sonarsource/sonar-scanner-cli:latest \
            -Dsonar.projectVersion=0.2.1 \
            -Dsonar.scm.revision=$GITHUB_SHA
