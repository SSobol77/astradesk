# SPDX-License-Identifier: Apache-2.0
# File: .env.example v2 alfa --refactoring--
# Description:
#     Environment configuration template for AstraDesk.
#     Copy this file to `.env` and fill in the values for your environment.
#     Supports both full Docker Compose mode and hybrid mode (Python locally + dependencies in Docker).
#     Integrates with deploy/istio/ (mTLS, Gateway) and /secrets (Admin API for certs).
# Author: Siergej Sobolewski
# Since: 2025-10-22

# --- A. Core Services Configuration ---
# These variables define how AstraDesk components connect to each other.

# --- A.1. PostgreSQL Database (for RAG, dialogs, audits) ---
# Choose one option based on your environment.

# Option for hybrid mode (Python locally) or cloud DB (e.g., Neon)
DATABASE_URL=postgresql://neondb_owner:your_password@your_neon_host/neondb?sslmode=require

# Option for full Docker Compose mode (uses internal service name 'db')
# DATABASE_URL=postgresql://astradesk:astrapass@db:5432/astradesk

# --- A.2. MySQL Database (for Java Ticket Adapter) ---
# Used by ticket-adapter-java for storing tickets.

# Option for hybrid mode (Java locally)
MYSQL_URL_R2DBC=r2dbc:mysql://localhost:3306/tickets

# Option for full Docker Compose mode (uses internal service name 'mysql')
# MYSQL_URL_R2DBC=r2dbc:mysql://mysql:3306/tickets

MYSQL_DATABASE=tickets
MYSQL_USER=tickets
MYSQL_PASSWORD=tickets

# --- A.3. Redis (for working memory and background tasks) ---
# Choose one option.

# Option for hybrid mode or cloud Redis
REDIS_URL=redis://default:your_password@your_redis_cloud_host:10303

# Option for full Docker Compose mode
# REDIS_URL=redis://redis:6379/0

# --- A.4. NATS (for event system and auditing) ---
# Choose one option.

# Option for hybrid mode
NATS_URL=nats://localhost:4222

# Option for full Docker Compose mode
# NATS_URL=nats://nats:4222

# --- A.5. Internal Service URLs ---
# How services communicate with each other.

# Option for hybrid mode (Python locally connects to Java in Docker)
TICKETS_BASE_URL=http://localhost:8082

# Option for full Docker Compose mode
# TICKETS_BASE_URL=http://ticket-adapter:8081

# --- B. Security Configuration (OIDC/JWT) ---
# Required by api-gateway (Python) and ticket-adapter-java for token validation.

OIDC_ISSUER=https://your-keycloak-or-auth0-issuer.com/
OIDC_AUDIENCE=astradesk-api
OIDC_JWKS_URL=https://your-keycloak-or-auth0-issuer.com/.well-known/jwks.json
OIDC_CLIENT_ID=your-client-id
OIDC_CLIENT_SECRET=your-client-secret

# --- C. External APIs Configuration ---

# --- C.1. Prometheus (for get_metrics tool) ---
# API URL for Prometheus server.

# Option for hybrid mode (if Prometheus in Docker)
MONITORING_API_URL=http://localhost:9090

# Option for full Docker Compose mode
# MONITORING_API_URL=http://prometheus:9090

# --- C.2. OpenWeatherMap (for get_weather tool) ---
# Register at openweathermap.org for a free key.
WEATHER_API_KEY=your_openweathermap_api_key_here

# --- D. LLM Configuration ---
# Choose one provider: "openai", "bedrock", "vllm".

MODEL_PROVIDER=openai

# --- D.1. OpenAI ---
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini
OPENAI_BASE_URL=https://api.openai.com/v1  # Optional, for proxy or custom endpoint

# --- D.2. AWS Bedrock ---
# Requires AWS credentials (e.g., ~/.aws/credentials or env vars)
# AWS_REGION=eu-central-1
# BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-v1:0

# --- D.3. vLLM (Self-hosted) ---
# VLLM_BASE_URL=http://localhost:8000/v1
# VLLM_MODEL=meta-llama/Llama-3-8B-Instruct

# --- E. Logging Level ---
# Available levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# --- F. mTLS/TLS Certificates ---
# Paths to mTLS/TLS certificates (mounted from ./secrets/ or fetched from /secrets API)
MTLS_CERT_PATH=/secrets/mtls-cert.pem
TLS_CERT_PATH=/secrets/tls-cert.pem

# --- G. Domain Packs Configuration ---
# API token for domain packs (e.g., domain-support, domain-finance)
PACK_API_TOKEN=your-pack-jwt-token

# --- H. Istio Configuration ---
# Enable Istio sidecar injection in local dev (optional, for testing mTLS)
ISTIO_ENABLED=false
